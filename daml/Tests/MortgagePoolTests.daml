
{-# LANGUAGE PartialTypeSignatures #-}

module Tests.MortgagePoolTests where

import DA.List
import Daml.Script

import Tests.Factories
import Main.MortgagePool

-- test:
weCanAddSecuritizers =
  do
    parties@Parties{..} <- allocateParties
    mortgagePoolCid <- buildPoolAbc123 parties
    Some mortgagePool <- queryContractId mortgagePoolHolder mortgagePoolCid
    assert (length mortgagePool.securitizers == 0)

    newPoolCid <- mortgagePoolHolder `submit` do exerciseCmd mortgagePoolCid AddSecuritizer with securitizer

    Some mortgagePool <- queryContractId mortgagePoolHolder newPoolCid
    assert (length mortgagePool.securitizers == 1)

    additionalSecuritizer <- allocateParty "TheNewSecuritizer"

    finalPoolCid <- mortgagePoolHolder `submit` do exerciseCmd newPoolCid AddSecuritizer with securitizer=additionalSecuritizer

    Some mortgagePool <- queryContractId mortgagePoolHolder finalPoolCid
    assert (mortgagePool.securitizers!!0 == securitizer)
    assert (mortgagePool.securitizers!!1 == additionalSecuritizer)



